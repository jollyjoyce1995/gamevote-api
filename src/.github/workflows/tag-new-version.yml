name: Tag new version on master

on:
  push:
    branches:
      - master

jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read current version from VERSION file or fallback
        id: get_version
        run: |
          if [ -f VERSION ]; then
            CURRENT_VERSION=$(cat VERSION)
            echo "Found VERSION file with version: $CURRENT_VERSION"
          else
            CURRENT_VERSION="1.0"
            echo "No VERSION file found, defaulting to $CURRENT_VERSION"
          fi
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Calculate new version
        id: new_version
        run: |
          ver=${{ steps.get_version.outputs.current_version }}
          IFS='.' read -r major minor patch <<< "$ver"
          patch=${patch:-0}
          patch=$((patch + 1))
          new_version="${major}.${minor}.${patch}"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update VERSION file
        run: |
          echo "${{ steps.new_version.outputs.new_version }}" > VERSION
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION
          git commit -m "Bump version to ${{ steps.new_version.outputs.new_version }}"
          git push

      - name: Create and push git tag
        run: |
          NEW_TAG="v${{ steps.new_version.outputs.new_version }}"
          git tag $NEW_TAG
          git push origin $NEW_TAG
